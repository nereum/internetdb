#!/bin/bash
#
# 2017-01-22 Nereu version using CentoS7/Mariadb

function PAUSE {
  echo
  /bin/echo -e "Press ENTER to continue or CTRL-C to cancel...\c" ; read junk
  echo
}

DBNAME="internetdb"

echo
echo "This script will create and load \"$DBNAME\" database."
echo "If the database already exist, it will backup it first and then recreate it"

rm -f *.zone all.txt

PAUSE

echo ". Backup database"

mysql $DBNAME -e 'select 1' >/dev/null && mysqldump $DBNAME | gzip -v >$DBNAME.sql.gz

PAUSE

echo ". [Re-]creating database and tables"
echo

mysql <<EOF

drop database if exists $DBNAME;

create database $DBNAME default charset=utf8;

use $DBNAME;

create table countries (
 id      int          not null auto_increment primary key,
 country varchar(2)   not null unique key,
 name    varchar(255) not null
);

create table networks (
  id           int         not null auto_increment primary key,
  country      varchar(2)  not null,
  network_cidr varchar(25) not null,
  network      varchar(20) not null,
  broadcast    varchar(20) not null,
  start_ip     varchar(20) not null,
  end_ip       varchar(20) not null,
  inetwork     int(10) unsigned not null,
  ibroadcast   int(10) unsigned not null,
  istart_ip    int(10) unsigned not null,
  iend_ip      int(10) unsigned not null,
  key start_end (istart_ip,iend_ip)
);

create table countries_iso31661 (
 id           int          not null auto_increment primary key,
 english_name varchar(255) not null,
 alpha2       varchar(2)   not null unique key,
 alpha3       varchar(3)   not null,
 numeric_code varchar(3)   not null
) character set utf8;

show tables;

EOF

PAUSE

echo ". Download all-zones"

curl 'http://www.ipdeny.com/ipblocks/data/countries/all-zones.tar.gz' >all-zones.tar.gz

tar -zxf all-zones.tar.gz \*.zone 

for f in $(ls *.zone)
do
  country=$(echo $f | sed -e 's/\.zone//')
  sed -e "s/^/${country} /" <$f
done >all.txt

PAUSE

echo ". Loading table [networks]..."
echo

mysql $DBNAME <<EOF
load data local infile 'all.txt'
into table networks
fields terminated by ' '
( @country, @network_cidr )
set
 country      = @country                                                                                                                       ,
 network_cidr = @network_cidr                                                                                                                  ,
 network      = inet_ntoa( inet_aton(substring_index(@network_cidr,'/',1)) )                                                                   ,
 broadcast    = inet_ntoa( inet_aton(substring_index(@network_cidr,'/',1)) + ~(~((1 << (32 - substring_index(@network_cidr,'/',-1))) - 1)))    ,
 start_ip     = inet_ntoa( inet_aton(substring_index(@network_cidr,'/',1)) + 1 )                                                               ,
 end_ip       = inet_ntoa( inet_aton(substring_index(@network_cidr,'/',1)) + ~(~((1 << (32 - substring_index(@network_cidr,'/',-1))) - 1)) - 1),
 inetwork     =            inet_aton(substring_index(@network_cidr,'/',1))                                                                     ,
 ibroadcast   =            inet_aton(substring_index(@network_cidr,'/',1)) + ~(~((1 << (32 - substring_index(@network_cidr,'/',-1))) - 1))     ,
 istart_ip    =            inet_aton(substring_index(@network_cidr,'/',1)) + 1                                                                 ,
 iend_ip      =            inet_aton(substring_index(@network_cidr,'/',1)) + ~(~((1 << (32 - substring_index(@network_cidr,'/',-1))) - 1)) - 1
;

select count(*) from networks;
EOF

PAUSE

echo ". Loading table [countries]..."
echo

mysql $DBNAME <<EOF

# ISO 3166-1
# https://en.wikipedia.org/wiki/ISO_3166-1

set session character_set_results=utf8;

load data local infile 'iso31661.tab' 
into table countries_iso31661 
character set utf8
fields terminated by '\t'  
(@english_name,@alpha2,@alpha3,@numeric_code)
set
english_name=@english_name,
alpha2=lower(@alpha2),
alpha3=lower(@alpha3),
numeric_code=@numeric_code
;

drop table if exists countries;
create table countries (
 id      int          not null auto_increment primary key,
 country varchar(2)   not null unique key, 
 name    varchar(255) not null
);

insert into countries ( country, name ) select alpha2, english_name from countries_iso31661 order by english_name;

# Exceptions
# Ver: https://en.wikipedia.org/wiki/Country_code_top-level_domain
insert into countries (country, name) values
('ap','Asia Pacific'),
('eu','European Union'),
('uk','United Kingdom');

select count(*) from countries;
select * from ( select country code, count(*) n from networks group by country ) c left outer join countries i on c.code=i.country  where i.country is null;

EOF

PAUSE

echo ". Clean up temporary files"
echo

rm -f *.zone all.txt

echo ". Finished."
